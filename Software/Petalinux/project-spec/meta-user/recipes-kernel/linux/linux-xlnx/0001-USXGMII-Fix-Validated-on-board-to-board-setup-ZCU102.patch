From 5b53ffaf29dc0b7549052ebd20830a35d391bfa4 Mon Sep 17 00:00:00 2001
From: Ajaya Dahal <ajayad@amd.com>
Date: Tue, 7 Oct 2025 15:45:28 +0000
Subject: [PATCH] USXGMII Fix - Validated on board to board setup (ZCU102)

---
 drivers/net/ethernet/xilinx/xilinx_axienet.h  |  1 +
 .../net/ethernet/xilinx/xilinx_axienet_main.c | 19 ++++++++++++++++---
 2 files changed, 17 insertions(+), 3 deletions(-)

diff --git a/drivers/net/ethernet/xilinx/xilinx_axienet.h b/drivers/net/ethernet/xilinx/xilinx_axienet.h
index 834b05bea..15963b2c3 100644
--- a/drivers/net/ethernet/xilinx/xilinx_axienet.h
+++ b/drivers/net/ethernet/xilinx/xilinx_axienet.h
@@ -468,6 +468,7 @@
 #define USXGMII_RATE_10G	0x06000300
 #define USXGMII_FD		BIT(28)
 #define USXGMII_LINK_STS	BIT(31)
+#define USXGMII_RESET		(BIT(0) | BIT(29) | BIT(30) | BIT(31))
 
 /* USXGMII AN STS register mask definitions */
 #define USXGMII_AN_STS_COMP_MASK	BIT(16)
diff --git a/drivers/net/ethernet/xilinx/xilinx_axienet_main.c b/drivers/net/ethernet/xilinx/xilinx_axienet_main.c
index 85b5731f9..b8784d7b5 100644
--- a/drivers/net/ethernet/xilinx/xilinx_axienet_main.c
+++ b/drivers/net/ethernet/xilinx/xilinx_axienet_main.c
@@ -2137,6 +2137,12 @@ static int axienet_open(struct net_device *ndev)
 	}
 
 	if (lp->phy_mode == PHY_INTERFACE_MODE_USXGMII) {
+		/* Reset before configuring AN */
+		reg = axienet_ior(lp, XXVS_RESET_OFFSET);
+		axienet_iow(lp, XXVS_RESET_OFFSET, reg | USXGMII_RESET);
+		mdelay(DELAY_1MS);
+		axienet_iow(lp, XXVS_RESET_OFFSET, reg);
+
 		netdev_dbg(ndev, "RX reg: 0x%x\n",
 			   axienet_ior(lp, XXV_RCW1_OFFSET));
 		/* USXGMII setup at selected speed */
@@ -2255,6 +2261,7 @@ static int axienet_open(struct net_device *ndev)
 
 	/* If Runtime speed switching supported */
 	if (lp->axienet_config->mactype == XAXIENET_10G_25G &&
+	    lp->phy_mode != PHY_INTERFACE_MODE_USXGMII &&
 	    (axienet_ior(lp, XXV_STAT_CORE_SPEED_OFFSET) &
 	     XXV_STAT_CORE_SPEED_RTSW_MASK)) {
 		axienet_iow(lp, XXVS_AN_ABILITY_OFFSET,
@@ -3880,6 +3887,7 @@ static const struct axienet_config axienet_usxgmii_config = {
 	.setoptions = xxvenet_setoptions,
 	.clk_init = xxvenet_clk_init,
 	.tx_ptplen = 0,
+	.gt_reset = xxv_gt_reset,
 };
 
 static const struct axienet_config axienet_mrmac_config = {
@@ -4496,7 +4504,10 @@ static int axienet_probe(struct platform_device *pdev)
 		of_node_put(np);
 	}
 
-	if (lp->axienet_config->mactype != XAXIENET_MRMAC) {
+//#	if (lp->axienet_config->mactype != XAXIENET_MRMAC) {
+	if (lp->axienet_config->mactype != XAXIENET_MRMAC &&
+	    lp->phy_mode != PHY_INTERFACE_MODE_USXGMII) {
+
 		lp->pcs.ops = &axienet_pcs_ops;
 		lp->pcs.neg_mode = true;
 		lp->pcs.poll = true;
@@ -4582,8 +4593,10 @@ static int axienet_probe(struct platform_device *pdev)
 
 	__set_bit(lp->phy_mode, lp->phylink_config.supported_interfaces);
 
-	if (lp->axienet_config->mactype != XAXIENET_MRMAC) {
-		lp->phylink = phylink_create(&lp->phylink_config, pdev->dev.fwnode,
+//#	if (lp->axienet_config->mactype != XAXIENET_MRMAC) {
+	if (lp->axienet_config->mactype != XAXIENET_MRMAC &&
+	    lp->phy_mode != PHY_INTERFACE_MODE_USXGMII){
+			lp->phylink = phylink_create(&lp->phylink_config, pdev->dev.fwnode,
 					     lp->phy_mode,
 					     &axienet_phylink_ops);
 	}
-- 
2.44.1

